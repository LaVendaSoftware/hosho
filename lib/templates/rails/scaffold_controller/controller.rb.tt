<% module_namespacing do -%>class <%= controller_class_name %>Controller < ApplicationController
  before_action :set_<%= singular_table_name %>, only: [:show, :edit, :update, :destroy]

  def index
    @<%= plural_table_name %> = repo.paginate(page: params[:page])
  end

  def show
  end

  def new
    @<%= singular_table_name %> = repo.build
  end

  def edit
  end

  def create
    @<%= singular_table_name %> = repo.build(<%= "#{singular_table_name}_params" %>)

    if @<%= orm_instance.save %>
      redirect_to(<%= redirect_resource_name %>, notice: t("flashes.create.success"))
    else
      render :new, status: :unprocessable_entity
    end
  end

  def update
    if @<%= orm_instance.update("#{singular_table_name}_params") %>
      redirect_to(<%= redirect_resource_name %>, notice: t("flashes.update.success"), status: :see_other)
    else
      render :edit, status: :unprocessable_entity
    end
  end

  def destroy
    @<%= orm_instance.destroy %>
    redirect_to(<%= index_helper %>_path, notice: t("flashes.destroy.success"), status: :see_other)
  end

  private

  def repo
    @repo ||= ApplicationRepo.new(<%= class_name %>)
  end

  def set_<%= singular_table_name %>
    @<%= singular_table_name %> = repo.find_by!(pid: params.expect(:id))
  end

  def <%= "#{singular_table_name}_params" %>
    <%- if attributes_names.empty? -%>
    params.fetch(:<%= singular_table_name %>, {})
    <%- else -%>
    params.expect(<%= singular_table_name %>: [<%= permitted_params %>])
    <%- end -%>
  end
end
<% end -%>
